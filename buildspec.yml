version: 0.2

#env:
  #variables:
     # key: "There are no variables"
  #parameter-store:
     # key: "There are no variables"

# phases:
#   pre_build: 
#     commands: 
#     - echo Logging in to Amazon ECR.... 
#     - aws --version
#     - echo Logging in to Amazon ECR...
#     - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
#   build: 
#     commands: 
#     - echo Build started on `date` 
#     - echo Building the Docker image... 
#     # update the following line with the name of your own ECR repository
#     - docker build -t $REPOSITORY_URI:latest .
#     # update the following line with the URI of your own ECR repository (view the Push Commands in the console)
#     - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG 
#   post_build: 
#     commands: 
#     - echo Build completed on `date` 
#     - echo pushing to repo
#     # update the following line with the URI of your own ECR repository
#     - docker push $REPOSITORY_URI:latest
#     - docker push $REPOSITORY_URI:$IMAGE_TAG
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - sudo su
      - dockerd &> dockerd-logfile &
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file... 
      #- printf '[{"ImageURI":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json
